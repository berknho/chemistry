library(baseballr)
library(tidyverse)
library(dplyr) # data manipulation
library(lubridate) # handle dates
library(data.table) # reading in csvs faster
# load data
pitchers <- data.table::fread("data/players/players_cleaned.csv")
setwd("/Users/berkeleyho/Documents/College 22-26 Info/Spring '25/Glazer - SDS 375/Project")
# load data
pitchers <- data.table::fread("data/players/players_cleaned.csv")
game_summaries <- data.table::fread("data/players/game_logs/game_summaries.csv")[, -1]
# pitches_21_24 <- read_data("data/players/game_logs/")
all_pitches <- data.table::fread("data/players/game_logs/pitches_2024.csv")[,-c(1:2)]
all_pitches <- all_pitches %>%
# drop any duplicates
distinct() %>%
# make sure date is in correct format
mutate(game_date = as.Date(game_date))
View(all_pitches)
is.Date(all_pitches$game_date)
game_summaries %>%
group_by(PlayerName, season)
View(game_summaries)
# group into pre-trade and post trade data
# get count of all pitches
pitch_counts <- all_pitches %>%
count(pitch_type, name = "Freq") %>%
arrange(desc(Freq))
pitch_counts
all_pitches %>%
# get the trade date for each pitcher
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(trade_date, mlbam_id),
by = c("pitcher"="mlbam_id"),
relationship = "many-to-many") %>%
# create columns to group by trade status and pitch type
mutate(
# create column for trade status
trade_status = case_when(game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"), .before = game_date) %>%
# Convert pitch types into wide format (avoids manual column creation)
mutate(pitches_thrown = 1) %>%
pivot_wider(
names_from = pitch_type,
values_from = pitches_thrown,
values_fill = 0
)
all_pitches %>%
# get the trade date for each pitcher
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(trade_date, mlbam_id),
by = c("pitcher"="mlbam_id"),
relationship = "many-to-many") %>%
# create columns to group by trade status and pitch type
mutate(
# create column for trade status
trade_status = case_when(game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"), .before = game_date) %>%
filter(!is.na(pitch_type) & pitch_type != "") %>%
# Convert pitch types into wide format
mutate(pitches_thrown = 1) %>%
pivot_wider(
names_from = pitch_type,
values_from = pitches_thrown,
values_fill = list(pitches_thrown = 0)
)
pitch_usage <- all_pitches %>%
# get the trade date for each pitcher
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(trade_date, mlbam_id),
by = c("pitcher"="mlbam_id"),
relationship = "many-to-many") %>%
# create columns to group by trade status and pitch type
mutate(
# create column for trade status
trade_status = case_when(game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"), .before = game_date) %>%
# filter out NA pitch types
filter(!is.na(pitch_type) & pitch_type != "") %>%
# Convert pitch types into wide format
mutate(pitches_thrown = 1) %>%
pivot_wider(
names_from = pitch_type,
values_from = pitches_thrown,
values_fill = list(pitches_thrown = 0)
) %>%
# group pitcher stats by trade status
group_by(player_name, trade_status, pitcher) %>%
# get summary of pitcher performance
summarize(
n_pitches = n(),
# get raw counts of pitches
across(CH:SV, sum, .names = "count_{.col}"),
# get percentage of usage
across(starts_with("count_"), ~ .x / n_pitches, .names = "pct_{.col}")
)
View(pitch_usage)
all_pitches %>%
# get the trade date for each pitcher
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(trade_date, mlbam_id),
by = c("pitcher"="mlbam_id"),
relationship = "many-to-many") %>%
# create columns to group by trade status and pitch type
mutate(
# create column for trade status
trade_status = case_when(game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"), .before = game_date) %>%
# filter out NA pitch types
filter(!is.na(pitch_type) & pitch_type != "") %>%
# Convert pitch types into wide format
mutate(pitches_thrown = 1) %>%
pivot_wider(
names_from = pitch_type,
values_from = pitches_thrown,
values_fill = list(pitches_thrown = 0)
) %>%
# group pitcher stats by trade status
group_by(player_name, trade_status, pitcher)
pitch_usage <- all_pitches %>%
# get the trade date for each pitcher
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(trade_date, mlbam_id),
by = c("pitcher"="mlbam_id"),
relationship = "many-to-many") %>%
# create columns to group by trade status and pitch type
mutate(
# create column for trade status
trade_status = case_when(game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"), .before = game_date) %>%
# filter out NA pitch types
filter(!is.na(pitch_type) & pitch_type != "") %>%
# Convert pitch types into wide format
mutate(pitches_thrown = 1) %>%
pivot_wider(
names_from = pitch_type,
values_from = pitches_thrown,
values_fill = list(pitches_thrown = 0)
) %>%
# group pitcher stats by trade status
group_by(player_name, trade_status, pitcher)
View(pitch_usage)
# get aggregate data for each pitcher
pitch_usage <- all_pitches %>%
# get the trade date for each pitcher
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(trade_date, mlbam_id),
by = c("pitcher"="mlbam_id"),
relationship = "many-to-many") %>%
# create columns to group by trade status and pitch type
mutate(
# create column for trade status
trade_status = case_when(game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"), .before = game_date) %>%
# filter out NA pitch types
filter(!is.na(pitch_type) & pitch_type != "") %>%
# Convert pitch types into wide format
mutate(pitches_thrown = 1) %>%
pivot_wider(
names_from = pitch_type,
values_from = pitches_thrown,
values_fill = list(pitches_thrown = 0)
) %>%
# group pitcher stats by trade status
group_by(player_name, trade_status, pitcher) %>%
# get summary of pitcher performance
summarize(
n_pitches = n(),
# get raw counts of pitches
across(CU:SV, sum, .names = "count_{.col}"),
# get percentage of usage
across(starts_with("count_"), ~ .x / n_pitches, .names = "pct_{.col}")
)
View(pitch_usage)
# don't consider SV, PO, CS since they're low counts
pitch_usage <- pitch_usage %>%
select(-c(count_SV, count_PO, count_CS,
pct_count_SV, pct_count_PO, pct_count_CS))
write.csv(pitch_usage, "data/players/pitch_usage.csv")
# pitches_21_24 <- read_data("data/players/game_logs/")
all_pitches <- data.table::fread("data/players/game_logs/pitches_2024.csv")[,-c(1:2)]
#### Cleaning Up Data ####
## export in next round ##
all_pitches <- all_pitches %>%
# drop any duplicates
distinct() %>%
# make sure date is in correct format
mutate(game_date = as.Date(game_date),
season = year(game_date))
# pitches_21_24 <- read_data("data/players/game_logs/")
all_pitches <- data.table::fread("data/players/game_logs/pitches_2024.csv")[,-c(1:2)]
#### Cleaning Up Data ####
## export in next round ##
all_pitches <- all_pitches %>%
# drop any duplicates
distinct() %>%
mutate(
# make sure date is in correct format
game_date = as.Date(game_date),
# add season column
season = year(game_date), .before = game_date)
# add season column to pitchers
pitchers <- pitchers %>%
mutate(season = year(date), .before = date)
#### add trade status to game summaries ####
# function to add trade status to game summaries
process_trade_status <- function(pitch_level_data, pitchers_df) {
all_pitches <- pitch_level_data
pitchers <- pitchers_df
all_pitches <- all_pitches %>%
# Join trade date by matching season and pitcher ID
left_join(
pitchers %>%
rename(trade_date = date) %>%
select(season, trade_date, mlbam_id),
by = c("season", "pitcher" = "mlbam_id"),
relationship = "many-to-many"
) %>%
# Assign trade status
mutate(
trade_status = case_when(
game_date >= trade_date ~ "post_trade",
game_date < trade_date ~ "pre_trade"
),
.before = game_date
)
return(all_pitches)
}
test <- process_trade_status(all_pitches, pitchers)
View(test)
sum(is.na(test$trade_status))
View(pitchers)
View(game_summaries)
all_pitches %>%
select(trade_status, pitcher, game_date) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1])
all_pitches <- process_trade_status(all_pitches, pitchers)
all_pitches %>%
select(trade_status, pitcher, game_date) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1])
View(all_pitches)
all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1])
game_summaries
# get trade dates for each game
all_trade_dates <- all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1]) %>%
left_join(pitchers %>%
select(mlbam_id, fangraphs_id),
by="mlbam_id",
relationship = "many-to-many")
# link trade status from all trade dates with game summaries
game_summaries <- game_summaries %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date")) %>%
relocate(trade_status, .after = Date)
# link trade status from all trade dates with game summaries
game_summaries <- game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date")) %>%
relocate(trade_status, .after = Date)
# get trade dates for each game
all_trade_dates <- all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1]) %>%
left_join(pitchers %>%
select(mlbam_id, fangraphs_id),
by="mlbam_id",
relationship = "many-to-many")
all_trade_dates
View(all_trade_dates)
is.na(all_trade_dates)
sum(is.na(all_trade_dates))
game_summaries %>%
mutate(Date = as.Date(Date))
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date")) %>%
relocate(trade_status, .after = Date) %>%
select(-c(mlbam_id, pitcher, season, fangraphs_id, game_date))
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date")) %>%
relocate(trade_status, .after = Date)
# get trade dates for each game
all_trade_dates <- all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1]) %>%
left_join(pitchers %>%
select(mlbam_id, fangraphs_id),
by="mlbam_id",
relationship = "many-to-many") %>%
distinct()
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date")) %>%
relocate(trade_status, .after = Date)
# get trade dates for each game
all_trade_dates <- all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1]) %>%
left_join(pitchers %>%
select(mlbam_id, fangraphs_id),
by="mlbam_id",
relationship = "many-to-many") %>%
distinct()
View(all_trade_dates)
# get trade dates for each game
all_trade_dates <- all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1]) %>%
left_join(pitchers %>%
select(mlbam_id, fangraphs_id),
by="mlbam_id",
relationship = "many-to-many")
View(all_trade_dates)
all_trade_dates %>%
group_by(pitcher, game_date, season) %>%
mutate(dup = row_number()) %>%
filter(dup == 1)
all_trade_dates %>%
group_by(pitcher, game_date, season) %>%
mutate(dup = row_number())
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date")) %>%
relocate(trade_status, .after = Date)
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"))
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many") %>%
relocate(trade_status, .after = Date)
# get trade dates for each game
all_trade_dates <- all_pitches %>%
select(trade_status, pitcher, game_date, season) %>%
group_by(pitcher, game_date, season) %>%
summarize(trade_status = trade_status[1],
game_date = game_date[1],
mlbam_id = pitcher[1]) %>%
left_join(pitchers %>%
select(mlbam_id, fangraphs_id),
by="mlbam_id",
relationship = "many-to-many")
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many")
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many") %>%
relocate(trade_status, .after = Date)
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many")
game_summaries <- data.table::fread("data/players/game_logs/game_summaries.csv")[, -1]
View(game_summaries)
game_summaries$trade_status.y
View(all_trade_dates)
# link trade status from all trade dates with game summaries
game_summaries <- game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many")
game_summaries <- data.table::fread("data/players/game_logs/game_summaries.csv")[, -1]
# link trade status from all trade dates with game summaries
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates,
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many") %>%
relocate(trade_status, .after = Date)
game_summaries <- data.table::fread("data/players/game_logs/game_summaries.csv")[, -1]
# link trade status from all trade dates with game summaries
game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates %>%
select(-c(season, mlbam_id, pitcher)),
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many") %>%
relocate(trade_status, .after = Date)
# link trade status from all trade dates with game summaries
game_summaries <- game_summaries %>%
mutate(Date = as.Date(Date)) %>%
left_join(all_trade_dates %>%
select(-c(season, mlbam_id, pitcher)),
by = c("playerid"="fangraphs_id", "Date"="game_date"),
relationship = "many-to-many") %>%
relocate(trade_status, .after = Date)
View(game_summaries)
is.na(game_summaries$trade_status)
sum(is.na(game_summaries$trade_status))
View(all_pitches)
library(baseballr)
library(tidyverse)
library(dplyr) # data manipulation
library(lubridate) # handle dates
library(data.table) # reading in csvs faster
# load data
pitchers <- data.table::fread("data/players/players_cleaned.csv")
View(pitchers)
game_summaries <- data.table::fread("data/players/game_logs/game_summaries.csv")[, -1]
# pitches_21_24 <- read_data("data/players/game_logs/")
all_pitches <- data.table::fread("data/players/game_logs/pitches_2024.csv")[,-c(1:2)]
View(game_summaries)
View(all_pitches)
# load data
pitchers <- data.table::fread("data/players/players_cleaned.csv")
View(pitchers)
# load data
pitchers <- data.table::fread("data/players/players_cleaned.csv")
game_summaries <- data.table::fread("data/players/game_logs/game_summaries.csv")[, -1]
View(pitchers)
